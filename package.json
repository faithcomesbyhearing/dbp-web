{
	"name": "dbp-reader",
	"version": "3.5.0",
	"description": "Bible is website",
	"repository": {
		"type": "git",
		"url": "https://dbsdevs@bitbucket.org/dbsdevs/dbp_4_reader.git"
	},
	"engines": {
		"npm": ">=10.9.0 <11",
		"node": ">=22 <23"
	},
	"author": "Digital Bible Society <developers@dbs.org> www.dbs.org",
	"license": "MIT",
	"scripts": {
		"analyze:clean": "rimraf stats.json",
		"preanalyze": "npm run analyze:clean",
		"analyze": "NEXT_BUILD_ANALYZE=true BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
		"extract-intl": "node ./internals/scripts/extract-intl.js",
		"npmcheckversion": "node ./internals/scripts/npmcheckversion.js",
		"preinstall": "npm run npmcheckversion",
		"start:dev": "env NODE_ENV=development node nextServer",
		"start:prerender": "node server/prerenderIndex.js",
		"start:tunnel": "env NODE_ENV=development ENABLE_TUNNEL=true node server",
		"start:prod": "env NODE_ENV=production node nextServer",
		"presetup": "npm i chalk shelljs",
		"build": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
		"build:development": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=development next build",
		"build:dev": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=development next build",
		"build:staging": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=staging next build",
		"build:stage": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=staging next build",
		"build:production": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
		"build:prod": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
		"start": "env NODE_ENV=production node nextServer",
		"setup": "node ./internals/scripts/setup.js",
		"postsetup": "npm run build:dll",
		"generate": "plop --plopfile internals/generators/index.js",
		"lint": "npm run lint:js",
		"lint:eslint": "eslint --ignore-pattern .gitignore --ignore-pattern internals/scripts",
		"lint:fix:eslint": "eslint --ignore-pattern .gitignore --ignore-pattern internals/scripts --fix",
		"lint:js": "npm run lint:eslint -- . ",
		"lint:fix:js": "npm run lint:fix:eslint -- . ",
		"lint:staged": "lint-staged; npm run test",
		"test": "env NODE_ENV=test jest",
		"test:coverage": "env NODE_ENV=test jest --coverage",
		"test:watch": "env NODE_ENV=test jest --watchAll",
		"coveralls": "cat ./coverage/jest/lcov.info | coveralls",
		"build:sass": "sass ./public/app.scss ./cdn/styles.css; csso cdn/styles.css --output cdn/styles.min.css; gzip cdn/styles.min.css; mv cdn/styles.min.css.gz cdn/styles.min.css; aws s3 sync ./cdn s3://bibleis-prod/ --include ./cdn/styles.min.css --content-encoding gzip",
		"prettier": "node ./node_modules/prettier/bin/prettier.cjs --arrow-parens=always --use-tabs --write --single-quote --trailing-comma=all"
	},
	"lint-staged": {
		"*.{js,json,scss,md}": [
			"eslint --ignore-pattern .gitignore --ignore-pattern internals/scripts"
		]
	},
	"pre-commit": "lint:staged",
	"jest": {
		"collectCoverageFrom": [
			"app/**/*.{js,jsx}",
			"!app/**/*.test.{js,jsx}",
			"!app/*/RbGenerated*/*.{js,jsx}",
			"!app/app.js",
			"!app/global-styles.js",
			"!app/*/*/Loadable.{js,jsx}",
			"!app/utils/svgPolyfill.js",
			"!app/reducers.js",
			"!app/configureStore.js",
			"!app/withRedux.js",
			"!app/utils/stopPropagationPolyfill.js",
			"!app/utils/polyfills.js",
			"!app/utils/testUtils/*"
		],
		"coverageDirectory": "<rootDir>/coverage/jest",
		"transform": {
			"^.+\\.[jt]sx?$": "@swc/jest"
		},
		"coverageThreshold": {
			"global": {
				"statements": 98,
				"branches": 91,
				"functions": 98,
				"lines": 98
			}
		},
		"moduleDirectories": [
			"node_modules",
			"app"
		],
		"moduleNameMapper": {
			".*\\.(css|less|styl|scss|sass)$": "./internals/mocks/cssModule.js",
			".*\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "./internals/mocks/image.js"
		},
		"setupFilesAfterEnv": [
			"./internals/testing/test-bundler.js"
		],
		"setupFiles": [
			"<rootDir>/jest.setup.js"
		],
		"testRegex": "tests/.*\\.test\\.js$",
		"testEnvironment": "jsdom",
		"moduleFileExtensions": [
			"js",
			"jsx",
			"ts",
			"tsx"
		]
	},
	"dependencies": {
		"@bugsnag/js": "8.2.0",
		"@bugsnag/plugin-react": "8.2.0",
		"@next/bundle-analyzer": "15.3.2",
		"@reduxjs/toolkit": "2.8.2",
		"@xmldom/xmldom": "0.9.8",
		"axios": "1.9.0",
		"chalk": "5.4.1",
		"compression": "1.8.0",
		"core-js": "3.42.0",
		"express": "5.1.0",
		"harmony-reflect": "1.6.2",
		"hls.js": "1.6.2",
		"hoist-non-react-statics": "3.3.2",
		"install": "0.13.0",
		"intl": "1.2.5",
		"invariant": "2.2.4",
		"lodash": "4.17.21",
		"lru-cache": "11.1.0",
		"lscache": "1.3.2",
		"match-sorter": "8.0.2",
		"next": "15.3.2",
		"npm": "11.4.1",
		"prop-types": "15.8.1",
		"query-string": "9.2.0",
		"rc-slider": "11.1.8",
		"react": "19.1.0",
		"react-animate-height": "3.2.3",
		"react-dom": "19.1.0",
		"react-intl": "7.1.11",
		"react-loadable": "5.5.0",
		"react-redux": "9.2.0",
		"react-share": "5.2.2",
		"react-transition-group": "4.4.5",
		"react-virtualized": "9.22.6",
		"redux": "5.0.1",
		"redux-persist": "6.0.0",
		"redux-saga": "1.3.0"
	},
	"devDependencies": {
		"@babel/core": "7.27.1",
		"@eslint/js": "9.27.0",
		"@fastify/pre-commit": "2.2.0",
		"@swc/jest": "0.2.38",
		"@testing-library/jest-dom": "6.6.3",
		"@testing-library/react": "16.3.0",
		"babel-plugin-formatjs": "10.5.38",
		"circular-dependency-plugin": "5.2.2",
		"dotenv": "16.5.0",
		"eslint": "9.27.0",
		"eslint-plugin-jsx-a11y": "6.10.2",
		"eslint-plugin-react": "7.37.5",
		"eslint-plugin-redux-saga": "1.3.2",
		"husky": "9.1.7",
		"jest-cli": "30.0.0",
		"jest-environment-jsdom": "30.0.0",
		"jsdom": "26.1.0",
		"lint-staged": "16.0.0",
		"ngrok": "5.0.0-beta.2",
		"plop": "4.0.1",
		"prettier": "3.5.3",
		"react-test-renderer": "19.1.0",
		"redux-mock-store": "1.5.5",
		"regenerator-runtime": "0.14.1",
		"reselect": "5.1.1",
		"sass": "1.89.0",
		"shelljs": "0.10.0"
	},
	"overrides": {
		"semver@<7.5.2": "7.5.2",
		"uuid@<7.0.0": "7.0.3",
		"send@<0.19.0": "1.1.0",
		"cross-spawn@<7.0.5": "7.0.5"
	}
}
