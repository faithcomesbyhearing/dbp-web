{
	"name": "dbp-reader",
	"version": "3.5.0",
	"description": "Bible is website",
	"repository": {
		"type": "git",
		"url": "https://dbsdevs@bitbucket.org/dbsdevs/dbp_4_reader.git"
	},
	"engines": {
		"npm": ">=9.5",
		"node": ">=20 <21"
	},
	"author": "Digital Bible Society <developers@dbs.org> www.dbs.org",
	"license": "MIT",
	"scripts": {
		"analyze:clean": "rimraf stats.json",
		"preanalyze": "npm run analyze:clean",
		"analyze": "NEXT_BUILD_ANALYZE=true BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
		"extract-intl": "node ./internals/scripts/extract-intl.js",
		"npmcheckversion": "node ./internals/scripts/npmcheckversion.js",
		"preinstall": "npm run npmcheckversion",
		"postinstall": "npm run npmpostinstall",
		"npmpostinstall": "node ./internals/scripts/npmpostinstall.js",
		"start:dev": "env NODE_ENV=development node nextServer",
		"start:prerender": "node server/prerenderIndex.js",
		"start:tunnel": "env NODE_ENV=development ENABLE_TUNNEL=true node server",
		"start:prod": "env NODE_ENV=production node nextServer",
		"presetup": "npm i chalk shelljs",
		"build": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
		"build:development": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=development next build",
		"build:dev": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=development next build",
		"build:staging": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=staging next build",
		"build:stage": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=staging next build",
		"build:production": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
		"build:prod": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
		"start": "env NODE_ENV=production node nextServer",
		"setup": "node ./internals/scripts/setup.js",
		"postsetup": "npm run build:dll",
		"generate": "plop --plopfile internals/generators/index.js",
		"lint": "npm run lint:js",
		"lint:eslint": "eslint --ignore-pattern .gitignore --ignore-pattern internals/scripts",
		"lint:fix:eslint": "eslint --ignore-pattern .gitignore --ignore-pattern internals/scripts --fix",
		"lint:js": "npm run lint:eslint -- . ",
		"lint:fix:js": "npm run lint:fix:eslint -- . ",
		"lint:staged": "lint-staged; npm run test",
		"test": "env NODE_ENV=test jest",
		"test:coverage": "env NODE_ENV=test jest --coverage",
		"test:watch": "env NODE_ENV=test jest --watchAll",
		"coveralls": "cat ./coverage/jest/lcov.info | coveralls",
		"build:sass": "sass ./public/app.scss ./cdn/styles.css; csso cdn/styles.css --output cdn/styles.min.css; gzip cdn/styles.min.css; mv cdn/styles.min.css.gz cdn/styles.min.css; aws s3 sync ./cdn s3://bibleis-prod/ --include ./cdn/styles.min.css --content-encoding gzip",
		"prettier": "node ./node_modules/prettier/bin/prettier.cjs --arrow-parens=always --use-tabs --write --single-quote --trailing-comma=all"
	},
	"lint-staged": {
		"*.{js,json,scss,md}": [
			"eslint --ignore-pattern .gitignore --ignore-pattern internals/scripts"
		]
	},
	"pre-commit": "lint:staged",
	"jest": {
		"collectCoverageFrom": [
			"app/**/*.{js,jsx}",
			"!app/**/*.test.{js,jsx}",
			"!app/*/RbGenerated*/*.{js,jsx}",
			"!app/app.js",
			"!app/global-styles.js",
			"!app/*/*/Loadable.{js,jsx}",
			"!app/utils/svgPolyfill.js",
			"!app/reducers.js",
			"!app/configureStore.js",
			"!app/withRedux.js",
			"!app/utils/stopPropagationPolyfill.js",
			"!app/utils/polyfills.js",
			"!app/utils/testUtils/*"
		],
		"coverageDirectory": "<rootDir>/coverage/jest",
		"transform": {
			"^.+\\.[jt]sx?$": "@swc/jest"
		},
		"coverageThreshold": {
			"global": {
				"statements": 98,
				"branches": 91,
				"functions": 98,
				"lines": 98
			}
		},
		"moduleDirectories": [
			"node_modules",
			"app"
		],
		"moduleNameMapper": {
			".*\\.(css|less|styl|scss|sass)$": "./internals/mocks/cssModule.js",
			".*\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "./internals/mocks/image.js"
		},
		"setupFilesAfterEnv": [
			"./internals/testing/test-bundler.js"
		],
		"setupFiles": [
			"<rootDir>/jest.setup.js"
		],
		"testRegex": "tests/.*\\.test\\.js$",
		"testEnvironment": "jsdom",
		"moduleFileExtensions": [
			"js",
			"jsx",
			"ts",
			"tsx"
		]
	},
	"dependencies": {
		"@bugsnag/js": "8.0.0",
		"@bugsnag/plugin-react": "8.0.0",
		"@next/bundle-analyzer": "14.2.9",
		"@xmldom/xmldom": "0.9.2",
		"axios": "1.7.7",
		"chalk": "^5.3.0",
		"compression": "^1.7.4",
		"core-js": "3.38.1",
		"express": "4.20.0",
		"harmony-reflect": "1.6.2",
		"hls.js": "1.5.15",
		"hoist-non-react-statics": "^3.3.2",
		"immutable": "4.3.7",
		"install": "0.13.0",
		"intl": "1.2.5",
		"invariant": "^2.2.4",
		"lodash": "^4.17.21",
		"lru-cache": "11.0.1",
		"lscache": "1.3.2",
		"match-sorter": "6.3.4",
		"newrelic": "12.3.1",
		"next": "14.2.9",
		"npm": "10.8.3",
		"prop-types": "^15.8.1",
		"query-string": "9.1.0",
		"rc-slider": "11.1.5",
		"react": "18.3.1",
		"react-accessible-accordion": "^5.0.0",
		"react-animate-height": "3.2.3",
		"react-dom": "18.3.1",
		"react-helmet": "6.1.0",
		"react-intl": "6.6.8",
		"react-loadable": "5.5.0",
		"react-redux": "9.1.2",
		"react-share": "5.1.0",
		"react-transition-group": "4.4.5",
		"react-virtualized": "^9.22.3",
		"redux": "5.0.1",
		"redux-immutable": "4.0.0",
		"redux-persist": "^6.0.0",
		"redux-saga": "^1.2.3"
	},
	"devDependencies": {
		"@babel/core": "7.25.2",
		"@eslint/js": "9.10.0",
		"@swc/jest": "^0.2.36",
		"@testing-library/jest-dom": "^6.5.0",
		"@testing-library/react": "^16.0.1",
		"babel-plugin-formatjs": "10.5.16",
		"circular-dependency-plugin": "^5.2.2",
		"dotenv": "16.4.5",
		"eslint": "9.10.0",
		"eslint-plugin-jsx-a11y": "6.10.0",
		"eslint-plugin-react": "7.35.2",
		"eslint-plugin-redux-saga": "1.3.2",
		"husky": "9.1.5",
		"jest-cli": "29.7.0",
		"jest-environment-jsdom": "29.7.0",
		"jsdom": "25.0.0",
		"lint-staged": "15.2.10",
		"ngrok": "5.0.0-beta.2",
		"plop": "4.0.1",
		"pre-commit": "1.2.2",
		"prettier": "3.3.3",
		"react-test-renderer": "18.3.1",
		"redux-mock-store": "1.5.4",
		"regenerator-runtime": "0.14.1",
		"reselect": "4.1.8",
		"sass": "1.78.0",
		"shelljs": "^0.8.5"
	},
	"overrides": {
		"semver@<7.5.2": "7.5.2",
		"uuid@<7.0.0": "7.0.3",
		"send@<0.19.0": "1.1.0"
	}
}
