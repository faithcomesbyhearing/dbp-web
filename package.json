{
  "name": "dbp-reader",
  "version": "3.5.0",
  "description": "Bible is website",
  "repository": {
    "type": "git",
    "url": "https://dbsdevs@bitbucket.org/dbsdevs/dbp_4_reader.git"
  },
  "engines": {
    "npm": ">=9.5",
    "node": ">=18 <19"
  },
  "author": "Digital Bible Society <developers@dbs.org> www.dbs.org",
  "license": "MIT",
  "scripts": {
    "analyze:clean": "rimraf stats.json",
    "preanalyze": "npm run analyze:clean",
    "analyze": "ANALYZE_BUNDLE=both BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
    "extract-intl": "babel-node --presets env,stage-0 -- ./internals/scripts/extract-intl.js",
    "npmcheckversion": "node ./internals/scripts/npmcheckversion.js",
    "preinstall": "npm run npmcheckversion",
    "postinstall": "npm run npmpostinstall",
    "npmpostinstall": "node ./internals/scripts/npmpostinstall.js",
    "start:dev": "env NODE_ENV=development node nextServer",
    "start:prerender": "node server/prerenderIndex.js",
    "start:tunnel": "env NODE_ENV=development ENABLE_TUNNEL=true node server",
    "start:production": "pm2 restart ecosystem.config.js --update-env --env production --only bible.is.prod;",
    "start:prod": "env NODE_ENV=production node nextServer",
    "presetup": "npm i chalk shelljs",
    "build": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
    "build:development": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=development next build",
    "build:dev": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=development next build",
    "build:staging": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=staging next build",
    "build:stage": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=staging next build",
    "build:production": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
    "build:prod": "BUILD_ID=$(git rev-parse HEAD) NODE_ENV=production next build",
    "start": "env NODE_ENV=development node nextServer",
    "setup": "node ./internals/scripts/setup.js",
    "postsetup": "npm run build:dll",
    "generate": "plop --plopfile internals/generators/index.js",
    "lint": "npm run lint:js",
    "lint:eslint": "eslint --ignore-path .gitignore --ignore-pattern internals/scripts --fix",
    "lint:js": "npm run lint:eslint -- . ",
    "lint:staged": "lint-staged; npm run test",
    "test": "env NODE_ENV=test jest",
    "test:coverage": "env NODE_ENV=test jest --coverage",
    "test:watch": "env NODE_ENV=test jest --watchAll",
    "coveralls": "cat ./coverage/jest/lcov.info | coveralls",
    "build:changes": "npm run build; pm2 restart all",
    "build:sass": "sass ./public/app.scss ./cdn/styles.css; csso cdn/styles.css --output cdn/styles.min.css; gzip cdn/styles.min.css; mv cdn/styles.min.css.gz cdn/styles.min.css; aws s3 sync ./cdn s3://bibleis-prod/ --include ./cdn/styles.min.css --content-encoding gzip",
    "reload:pm2": "pm2 reload ecosystem.config.js --update-env --env production --only bible.is.prod;",
    "fetch-latest-site": "git checkout .; rm package-lock.json; git pull origin master; npm install; npm run npmpostinstall; npm run build:prod; pm2 restart ecosystem.config.js --update-env --env production --only bible.is.production;",
    "update-staging": "git checkout .; rm package-lock.json; git pull origin staging; npm install; npm run npmpostinstall; npm run build:staging; pm2 restart ecosystem.config.js --only bible.is.staging;",
    "fetch-latest-dev": "git checkout .; rm package-lock.json; git pull origin development; npm install; npm run build; npm run npmpostinstall; pm2 restart ecosystem.config.js --update-env --env production --only bible.is.development;"
  },
  "lint-staged": {
    "*.{js,json,scss,md}": [
      "prettier --single-quote=true --arrow-parens=always --use-tabs --write --single-quote --trailing-comma=all",
      "git add"
    ],
    "*.js": "lint:eslint"
  },
  "pre-commit": "lint:staged",
  "plugins": [
    "@babel/plugin-transform-runtime"
  ],
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": "airbnb",
    "env": {
      "browser": true,
      "node": true,
      "jest": true,
      "es6": true
    },
    "plugins": [
      "redux-saga",
      "react",
      "jsx-a11y"
    ],
    "parserOptions": {
      "ecmaVersion": 6,
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true
      }
    },
    "rules": {
      "arrow-parens": [
        "error",
        "always"
      ],
      "arrow-body-style": [
        2,
        "as-needed"
      ],
      "class-methods-use-this": 0,
      "comma-dangle": [
        2,
        "always-multiline"
      ],
      "no-unused-expressions": [
        "error",
        {
          "allowTernary": true
        }
      ],
      "import/imports-first": 0,
      "import/newline-after-import": 0,
      "import/no-dynamic-require": 0,
      "import/no-extraneous-dependencies": 0,
      "import/no-named-as-default": 0,
      "import/no-unresolved": 2,
      "import/no-webpack-loader-syntax": 0,
      "import/prefer-default-export": 0,
      "jsx-a11y/no-static-element-interactions": 0,
      "jsx-a11y/click-events-have-key-events": 0,
      "jsx-a11y/anchor-is-valid": 0,
      "jsx-a11y/label-has-for": 0,
      "jsx-a11y/label-has-associated-control": 0,
      "no-tabs": 0,
      "no-else-return": 0,
      "indent": 0,
      "no-mixed-spaces-and-tabs": 0,
      "max-len": 0,
      "newline-per-chained-call": 0,
      "no-confusing-arrow": 0,
      "no-console": 1,
      "no-undef": 0,
      "no-use-before-define": 0,
      "prefer-template": 2,
      "no-return-assign": 0,
      "react/forbid-prop-types": 0,
      "react/jsx-first-prop-new-line": [
        2,
        "multiline"
      ],
      "react/jsx-indent": 0,
      "react/jsx-indent-props": 0,
      "react/no-danger": 0,
      "react/jsx-fragments": 0,
      "react/jsx-filename-extension": 0,
      "react/jsx-one-expression-per-line": 0,
      "react/jsx-no-target-blank": 0,
      "react/jsx-curly-brace-presence": 0,
      "react/no-unused-state": 0,
      "react/destructuring-assignment": 0,
      "react/require-default-props": 0,
      "react/require-extension": 0,
      "react/self-closing-comp": 0,
      "react/sort-comp": 0,
      "react/jsx-props-no-spreading": "off",
      "no-restricted-globals": 0,
      "operator-linebreak": 0,
      "object-curly-newline": 0,
      "consistent-return": 0,
      "prefer-destructuring": 0,
      "implicit-arrow-linebreak": 0,
      "function-paren-newline": 0,
      "redux-saga/no-yield-in-race": 2,
      "redux-saga/yield-effects": 2,
      "require-yield": 0
    }
  },
  "dllPlugin": {
    "path": "node_modules/react-boilerplate-dlls",
    "exclude": [
      "chalk",
      "compression",
      "env",
      "express",
      "ip",
      "minimist",
      "sanitize.css"
    ],
    "include": [
      "core-js",
      "eventsource-polyfill"
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "app/**/*.{js,jsx}",
      "!app/**/*.test.{js,jsx}",
      "!app/*/RbGenerated*/*.{js,jsx}",
      "!app/app.js",
      "!app/global-styles.js",
      "!app/*/*/Loadable.{js,jsx}",
      "!app/utils/svgPolyfill.js",
      "!app/reducers.js",
      "!app/configureStore.js",
      "!app/withRedux.js",
      "!app/utils/stopPropagationPolyfill.js",
      "!app/utils/polyfills.js",
      "!app/utils/testUtils/*"
    ],
    "coverageDirectory": "<rootDir>/coverage/jest",
    "transform": {
      "^.+\\.js$": "babel-jest"
    },
    "coverageThreshold": {
      "global": {
        "statements": 98,
        "branches": 91,
        "functions": 98,
        "lines": 98
      }
    },
    "moduleDirectories": [
      "node_modules",
      "app"
    ],
    "moduleNameMapper": {
      ".*\\.(css|less|styl|scss|sass)$": "<rootDir>/internals/mocks/cssModule.js",
      ".*\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/image.js"
    },
    "setupTestFrameworkScriptFile": "<rootDir>/internals/testing/test-bundler.js",
    "testRegex": "tests/.*\\.test\\.js$"
  },
  "dependencies": {
    "@babel/polyfill": "^7.0.0",
    "@bugsnag/js": "^5.1.0",
    "@bugsnag/plugin-react": "^5.1.0",
    "chalk": "^1.1.3",
    "compression": "^1.7.3",
    "express": "^4.16.3",
    "fontfaceobserver": "2.0.9",
    "harmony-reflect": "^1.6.0",
    "history": "4.7.2",
    "hls.js": "^1.4.0",
    "hoist-non-react-statics": "2.1.1",
    "immutable": "3.8.1",
    "intl": "1.2.5",
    "invariant": "2.2.2",
    "ip": "1.1.5",
    "isomorphic-fetch": "^2.2.1",
    "jh108-redux-persist-immutable-plugin": "^1.0.0",
    "lodash": "^4.17.10",
    "lodash-webpack-plugin": "^0.11.5",
    "lru-cache": "^4.1.3",
    "lscache": "^1.2.0",
    "match-sorter": "^6.3.1",
    "mini-css-extract-plugin": "^0.9.0",
    "minimist": "1.2.0",
    "newrelic": "^10.0.0",
    "next": "^12.0.0",
    "next-redux-saga": "^4.1.2",
    "node-forge": "^0.10.0",
    "nodemailer": "^6.6.5",
    "pm2": "^5.1.2",
    "pm2plugin": "^2.2.1",
    "prop-types": "15.7.2",
    "query-string": "^7.0.1",
    "rc-slider": "^9.7.2",
    "react": "^18.0.0",
    "react-accessible-accordion": "^5.0.0",
    "react-animate-height": "^2.0.23",
    "react-dom": "^18.0.0",
    "react-helmet": "6.1.0",
    "react-intl": "^5.21.0",
    "react-loadable": "5.5.0",
    "react-redux": "^7.2.7",
    "react-router-dom": "^6.10.0",
    "react-router-redux": "^5.0.0-alpha.9",
    "react-share": "^4.3.1",
    "react-transition-group": "^4.4.2",
    "react-virtualized": "^9.22.3",
    "redux": "4.1.2",
    "redux-immutable": "4.0.0",
    "redux-persist": "^6.0.0",
    "redux-saga": "1.1.3",
    "reselect": "4.1.2",
    "sanitize.css": "12.0.1",
    "warning": "4.0.3",
    "webpack-bundle-analyzer": "^4.6.0",
    "whatwg-fetch": "3.6.2"
  },
  "devDependencies": {
    "@babel/cli": "^7.15.0",
    "@babel/core": "^7.15.0",
    "@babel/node": "^7.15.0",
    "@babel/plugin-transform-classes": "^7.14.5",
    "@babel/plugin-transform-runtime": "^7.15.0",
    "@babel/preset-env": "^7.15.1",
    "@babel/preset-react": "^7.14.5",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.4.3",
    "@zeit/next-bundle-analyzer": "^0.1.2",
    "add-asset-html-webpack-plugin": "3.2.0",
    "ansi-regex": "^6.0.0",
    "babel-core": "^7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^27.0.0",
    "babel-loader": "8.0.0",
    "babel-plugin-dynamic-import-node": "^2.3.3",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-react-intl": "2.3.1",
    "babel-plugin-react-transform": "2.0.2",
    "babel-plugin-styled-components": "1.1.4",
    "babel-plugin-transform-define": "^1.3.0",
    "babel-plugin-transform-es2015-modules-commonjs": "6.26.2",
    "babel-plugin-transform-react-constant-elements": "6.23.0",
    "babel-plugin-transform-react-inline-elements": "6.22.0",
    "babel-plugin-transform-react-jsx-source": "^6.22.0",
    "babel-plugin-transform-react-remove-prop-types": "0.4.24",
    "babel-preset-env": "^1.7.0",
    "babel-preset-stage-0": "6.24.1",
    "circular-dependency-plugin": "3.0.0",
    "coveralls": "2.13.1",
    "css-loader": "0.28.4",
    "dotenv": "^4.0.0",
    "env": "^0.0.2",
    "enzyme": "^3.3.0",
    "eslint": "^7.0.0",
    "eslint-config-airbnb": "^18.0.0",
    "eslint-config-airbnb-base": "^14.0.0",
    "eslint-import-resolver-webpack": "^0.13.0",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-jsx-a11y": "^6.3.0",
    "eslint-plugin-react": "^7.19.0",
    "eslint-plugin-redux-saga": "^1.0.0",
    "eventsource-polyfill": "0.9.6",
    "exports-loader": "0.6.4",
    "file-loader": "1.1.11",
    "html-loader": "^1.0.0-alpha.0",
    "html-webpack-plugin": "3.2.0",
    "image-webpack-loader": "3.3.0",
    "imports-loader": "0.8.0",
    "jest-cli": "^24.0.0",
    "jsdom": "14.0.0",
    "lint-staged": "7.2.2",
    "lodash": "^4.17.10",
    "ngrok": "3.1.1",
    "node-plop": "0.18.0",
    "node-sass": "^6.0.0",
    "null-loader": "0.1.1",
    "offline-plugin": "5.0.6",
    "plop": "2.7.4",
    "pre-commit": "1.2.2",
    "prettier": "^1.19.1",
    "react-test-renderer": "^18.0.0",
    "redux-mock-store": "^1.5.3",
    "regenerator-runtime": "^0.13.2",
    "rimraf": "2.6.3",
    "sass": "^1.50.6",
    "sass-loader": "^7.1.0",
    "shelljs": "^0.8.3",
    "style-loader": "0.23.1",
    "url-loader": "1.1.2",
    "webpack": "^4.40.0",
    "webpack-dev-middleware": "3.7.2",
    "webpack-hot-middleware": "2.25.0",
    "xmldom": "^0.1.27"
  }
}
